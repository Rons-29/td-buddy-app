import React, { useState } from 'react';
import { VulnerabilityAnalysis } from '../types/password';
import { getVulnerabilityLevel } from '../utils/vulnerabilityAnalyzer';

interface VulnerabilityAnalysisDisplayProps {
  analysis: VulnerabilityAnalysis;
  password: string;
  onClose?: () => void;
}

export const VulnerabilityAnalysisDisplay: React.FC<
  VulnerabilityAnalysisDisplayProps
> = ({ analysis, password, onClose }) => {
  const [activeTab, setActiveTab] = useState<
    'overview' | 'details' | 'education' | 'comparison'
  >('overview');
  const vulnerabilityLevel = getVulnerabilityLevel(analysis.vulnerabilityScore);

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critical':
        return 'text-red-700 bg-red-100';
      case 'high':
        return 'text-red-600 bg-red-50';
      case 'medium':
        return 'text-orange-600 bg-orange-50';
      case 'low':
        return 'text-yellow-600 bg-yellow-50';
      default:
        return 'text-gray-600 bg-gray-50';
    }
  };

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case 'trivial':
        return 'text-red-700 bg-red-100';
      case 'easy':
        return 'text-orange-600 bg-orange-100';
      case 'medium':
        return 'text-yellow-600 bg-yellow-100';
      case 'hard':
        return 'text-green-600 bg-green-100';
      default:
        return 'text-gray-600 bg-gray-100';
    }
  };

  return (
    <div className="wb-vulnerability-analysis-modal">
      <div
        className="wb-vulnerability-analysis-overlay"
        onClick={onClose}
      ></div>
      <div className="wb-vulnerability-analysis-content">
        {/* ヘッダー */}
        <div className="wb-vulnerability-analysis-header">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <span className="text-3xl">{vulnerabilityLevel.icon}</span>
              <div>
                <h3 className="wb-vulnerability-analysis-title">
                  脆弱性分析結果
                </h3>
                <div className="flex items-center gap-2 mt-1">
                  <span
                    className={`wb-vulnerability-score-badge wb-vulnerability-${vulnerabilityLevel.level}`}
                  >
                    {analysis.vulnerabilityScore}/100
                  </span>
                  <span
                    className={`wb-vulnerability-level-badge wb-vulnerability-${vulnerabilityLevel.level}`}
                  >
                    {vulnerabilityLevel.label}
                  </span>
                </div>
              </div>
            </div>
            {onClose && (
              <button
                onClick={onClose}
                className="wb-vulnerability-close-button"
              >
                ✕
              </button>
            )}
          </div>

          {/* パスワード表示 */}
          <div className="wb-analyzed-password">
            <label className="wb-analyzed-password-label">
              分析対象パスワード:
            </label>
            <code className="wb-analyzed-password-value">{password}</code>
          </div>
        </div>

        {/* タブナビゲーション */}
        <div className="wb-vulnerability-tabs">
          <button
            onClick={() => setActiveTab('overview')}
            className={`wb-vulnerability-tab ${
              activeTab === 'overview' ? 'active' : ''
            }`}
          >
            📊 概要
          </button>
          <button
            onClick={() => setActiveTab('details')}
            className={`wb-vulnerability-tab ${
              activeTab === 'details' ? 'active' : ''
            }`}
          >
            🔍 詳細分析
          </button>
          <button
            onClick={() => setActiveTab('education')}
            className={`wb-vulnerability-tab ${
              activeTab === 'education' ? 'active' : ''
            }`}
          >
            📚 教育コンテンツ
          </button>
          <button
            onClick={() => setActiveTab('comparison')}
            className={`wb-vulnerability-tab ${
              activeTab === 'comparison' ? 'active' : ''
            }`}
          >
            ⚖️ 比較
          </button>
        </div>

        {/* タブコンテンツ */}
        <div className="wb-vulnerability-tab-content">
          {activeTab === 'overview' && (
            <div className="wb-vulnerability-overview">
              <div className="wb-vulnerability-score-section">
                <h4 className="wb-vulnerability-section-title">脆弱性スコア</h4>
                <div className="wb-vulnerability-score-display">
                  <div className="wb-vulnerability-score-bar">
                    <div
                      className={`wb-vulnerability-score-fill wb-vulnerability-${vulnerabilityLevel.level}`}
                      style={{ width: `${analysis.vulnerabilityScore}%` }}
                    ></div>
                  </div>
                  <div className="wb-vulnerability-score-text">
                    {analysis.vulnerabilityScore}/100 (
                    {vulnerabilityLevel.label})
                  </div>
                </div>
              </div>

              <div className="wb-vulnerability-issues-section">
                <h4 className="wb-vulnerability-section-title">
                  検出された問題 ({analysis.vulnerabilities.length}件)
                </h4>
                <div className="wb-vulnerability-issues-list">
                  {analysis.vulnerabilities.map((issue, index) => (
                    <div key={index} className="wb-vulnerability-issue-card">
                      <div className="wb-vulnerability-issue-header">
                        <span
                          className={`wb-vulnerability-severity-badge ${getSeverityColor(
                            issue.severity
                          )}`}
                        >
                          {issue.severity.toUpperCase()}
                        </span>
                        <span className="wb-vulnerability-issue-type">
                          {issue.type}
                        </span>
                      </div>
                      <div className="wb-vulnerability-issue-description">
                        {issue.description}
                      </div>
                      <div className="wb-vulnerability-issue-impact">
                        <strong>影響:</strong> {issue.impact}
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              <div className="wb-vulnerability-recommendations-section">
                <h4 className="wb-vulnerability-section-title">推奨改善策</h4>
                <ul className="wb-vulnerability-recommendations-list">
                  {analysis.recommendations.map((recommendation, index) => (
                    <li
                      key={index}
                      className="wb-vulnerability-recommendation-item"
                    >
                      <span className="wb-vulnerability-recommendation-icon">
                        ✓
                      </span>
                      {recommendation}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          )}

          {activeTab === 'details' && (
            <div className="wb-vulnerability-details">
              <h4 className="wb-vulnerability-section-title">詳細分析</h4>
              {analysis.vulnerabilities.map((issue, index) => (
                <div key={index} className="wb-vulnerability-detail-card">
                  <div className="wb-vulnerability-detail-header">
                    <h5 className="wb-vulnerability-detail-title">
                      {issue.type} - {issue.description}
                    </h5>
                    <span
                      className={`wb-vulnerability-severity-badge ${getSeverityColor(
                        issue.severity
                      )}`}
                    >
                      {issue.severity}
                    </span>
                  </div>
                  <div className="wb-vulnerability-detail-content">
                    <div className="wb-vulnerability-detail-impact">
                      <strong>セキュリティへの影響:</strong>
                      <p>{issue.impact}</p>
                    </div>
                    {issue.examples && issue.examples.length > 0 && (
                      <div className="wb-vulnerability-detail-examples">
                        <strong>類似例:</strong>
                        <div className="wb-vulnerability-examples-list">
                          {issue.examples.map((example, exIndex) => (
                            <code
                              key={exIndex}
                              className="wb-vulnerability-example"
                            >
                              {example}
                            </code>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          )}

          {activeTab === 'education' && (
            <div className="wb-vulnerability-education">
              <div className="wb-vulnerability-education-header">
                <h4 className="wb-vulnerability-section-title">
                  {analysis.educationalContent.title}
                </h4>
                <p className="wb-vulnerability-education-explanation">
                  {analysis.educationalContent.explanation}
                </p>
              </div>

              <div className="wb-vulnerability-education-section">
                <h5 className="wb-vulnerability-education-subtitle">
                  なぜ脆弱なのか？
                </h5>
                <ul className="wb-vulnerability-education-list">
                  {analysis.educationalContent.whyVulnerable.map(
                    (reason, index) => (
                      <li
                        key={index}
                        className="wb-vulnerability-education-item"
                      >
                        <span className="wb-vulnerability-education-icon">
                          ⚠️
                        </span>
                        {reason}
                      </li>
                    )
                  )}
                </ul>
              </div>

              <div className="wb-vulnerability-education-section">
                <h5 className="wb-vulnerability-education-subtitle">
                  攻撃手法
                </h5>
                <div className="wb-vulnerability-attack-methods">
                  {analysis.educationalContent.attackMethods.map(
                    (method, index) => (
                      <div
                        key={index}
                        className="wb-vulnerability-attack-method-card"
                      >
                        <div className="wb-vulnerability-attack-method-header">
                          <h6 className="wb-vulnerability-attack-method-name">
                            {method.name}
                          </h6>
                          <span
                            className={`wb-vulnerability-difficulty-badge ${getDifficultyColor(
                              method.difficulty
                            )}`}
                          >
                            {method.difficulty}
                          </span>
                        </div>
                        <p className="wb-vulnerability-attack-method-description">
                          {method.description}
                        </p>
                        <div className="wb-vulnerability-attack-method-time">
                          <strong>破られるまでの時間:</strong>{' '}
                          {method.timeToBreak}
                        </div>
                      </div>
                    )
                  )}
                </div>
              </div>

              <div className="wb-vulnerability-education-section">
                <h5 className="wb-vulnerability-education-subtitle">
                  実際の事例
                </h5>
                <ul className="wb-vulnerability-education-list">
                  {analysis.educationalContent.realWorldExamples.map(
                    (example, index) => (
                      <li
                        key={index}
                        className="wb-vulnerability-education-item"
                      >
                        <span className="wb-vulnerability-education-icon">
                          📰
                        </span>
                        {example}
                      </li>
                    )
                  )}
                </ul>
              </div>
            </div>
          )}

          {activeTab === 'comparison' && analysis.comparisonExample && (
            <div className="wb-vulnerability-comparison">
              <h4 className="wb-vulnerability-section-title">
                強いパスワードとの比較
              </h4>

              <div className="wb-vulnerability-comparison-grid">
                <div className="wb-vulnerability-comparison-weak">
                  <h5 className="wb-vulnerability-comparison-subtitle">
                    <span className="wb-vulnerability-comparison-icon">❌</span>
                    脆弱なパスワード
                  </h5>
                  <code className="wb-vulnerability-comparison-password weak">
                    {analysis.comparisonExample.weakPassword}
                  </code>
                  <div className="wb-vulnerability-comparison-score">
                    脆弱性スコア: {analysis.vulnerabilityScore}/100
                  </div>
                </div>

                <div className="wb-vulnerability-comparison-arrow">
                  <span className="wb-vulnerability-comparison-arrow-icon">
                    →
                  </span>
                </div>

                <div className="wb-vulnerability-comparison-strong">
                  <h5 className="wb-vulnerability-comparison-subtitle">
                    <span className="wb-vulnerability-comparison-icon">✅</span>
                    強いパスワード
                  </h5>
                  <code className="wb-vulnerability-comparison-password strong">
                    {analysis.comparisonExample.strongPassword}
                  </code>
                  <div className="wb-vulnerability-comparison-score">
                    脆弱性スコア: 5/100 (推定)
                  </div>
                </div>
              </div>

              <div className="wb-vulnerability-comparison-explanation">
                <h5 className="wb-vulnerability-comparison-subtitle">
                  改善のポイント
                </h5>
                <p className="wb-vulnerability-comparison-text">
                  {analysis.comparisonExample.explanation}
                </p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};
